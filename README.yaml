---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Elasticache

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-elasticache

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/terraform.yml"

#  description of this project
# yamllint disable rule:line-length
description: |-
  Terraform module to create Elasticache Cluster and replica for Redis and Memcache.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage : |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Redis
  ```hcl
      module "redis" {
      source      = "clouddrove/elasticache/aws
      version     = "1.3.0"
    
      name        = "redis"
      environment = "test"
      label_order = ["name", "environment"]
    
      vpc_id        = module.vpc.vpc_id
      allowed_ip    = [module.vpc.vpc_cidr_block]
      allowed_ports = [6379]
    
      cluster_replication_enabled = true
      replication_enabled         = true
      engine                      = "redis"
      engine_version              = "7.0"
      parameter_group_name        = "default.redis7"
      port                        = 6379
      node_type                   = "cache.t2.micro"
      subnet_ids                  = module.subnets.public_subnet_id
      availability_zones          = [""]
      automatic_failover_enabled  = false
      multi_az_enabled            = false
      num_cache_clusters          = 1
      replicas_per_node_group     = 1
      retention_in_days           = 0
      snapshot_retention_limit    = 7
    
      log_delivery_configuration = [
      {
      destination_type = "cloudwatch-logs"
      log_format       = "json"
      log_type         = "slow-log"
      },
      {
      destination_type = "cloudwatch-logs"
      log_format       = "json"
      log_type         = "engine-log"
      }
      ]
      extra_tags = {
      Application = "CloudDrove"
      }

  ```
  ### Redis Cluster
  ```hcl
      module "redis-cluster" {
      source      = "clouddrove/elasticache/aws
      version     = "1.3.0"
    
      name        = "redis-cluster"
      environment = "test"
      label_order = ["environment", "name"]
    
      vpc_id        = module.vpc.vpc_id
      allowed_ip    = [module.vpc.vpc_cidr_block]
      allowed_ports = [6379]
    
      cluster_replication_enabled = true
      engine                      = "redis"
      engine_version              = "7.0"
      parameter_group_name        = "default.redis7.cluster.on"
      port                        = 6379
      node_type                   = "cache.t2.micro"
      subnet_ids                  = module.subnets.public_subnet_id
      availability_zones          = ["eu-west-1a", "eu-west-1b"]
      replicas_per_node_group     = 2
      num_cache_nodes             = 1
      snapshot_retention_limit    = 7
      automatic_failover_enabled  = true
      extra_tags = {
      Application = "CloudDrove"
      }
  ```
  ### Memcache
  ```hcl
      module "memcached" {
      source      = "clouddrove/elasticache/aws
      version     = "1.3.0"
    
      name        = "memcached"
      environment = "test"
      label_order = ["name", "environment"]
    
      vpc_id        = module.vpc.vpc_id
      allowed_ip    = [module.vpc.vpc_cidr_block]
      allowed_ports = [11211]
    
      cluster_enabled      = true
      engine               = "memcached"
      engine_version       = "1.6.17"
      family               = "memcached1.5"
      parameter_group_name = ""
      az_mode              = "cross-az"
      port                 = 11211
      node_type            = "cache.t2.micro"
      num_cache_nodes      = 2
      subnet_ids           = module.subnets.public_subnet_id
      availability_zones   = ["eu-west-1a", "eu-west-1b"]
      extra_tags = {
      Application = "CloudDrove"
      }
  ```
